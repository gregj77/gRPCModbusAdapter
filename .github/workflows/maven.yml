# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Update Version to release
      if: github.ref == 'refs/heads/main'
      run: mvn -B versions:set -DnewVersion=1.0.$GITHUB_RUN_NUMBER

    - name: Update Version to snapshot
      if: github.ref != 'refs/heads/main'
      run: mvn -B versions:set -DnewVersion=1.0.$GITHUB_RUN_NUMBER-SNAPSHOT

    - name: Build with Maven
      run: mvn -B package verify deploy org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=gregj77_gRPCModbusAdapter --file pom.xml -Dsonar.host.url=https://sonarcloud.io -Dsonar.coverage.jacoco.xmlReportPaths=./target/site/jacoco/jacoco.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        REPOSITORY_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}

    - name: Log-in to docker repository
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push docker
      if: github.ref == 'refs/heads/main'
      run: docker buildx build --platform linux/amd64,linux/arm64 -t gregj77/grpc-modbus-adapter:latest -t gregj77/grpc-modbus-adapter:1.0.$GITHUB_RUN_NUMBER --push .

    - name: Generate docker image on pull request
      if: github.event_name == 'pull_request'
      run: docker buildx build --platform linux/amd64,linux/arm64 -t gregj77/grpc-modbus-adapter:debug -t gregj77/grpc-modbus-adapter:1.0.$GITHUB_RUN_NUMBER-SNAPSHOT --push .